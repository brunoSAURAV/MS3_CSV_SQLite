{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\froman\fcharset0 Times-Roman;
}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;\red0\green0\blue0;
\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c0\c0\c93333;}
\margl1440\margr1440\vieww17660\viewh11960\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 	Name of the Project: CSV file to SQLlite In-memory database. \
\
	Description of the project:  The purpose of this project is to develop a Java application that will consume a CSV file, parse data and insert to a SQLite In-					memory database. \
\
	Requirements for the project: \
\
						 
\f1\fs25\fsmilli12667 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 a. Table X has 10 columns A, B, C, D, E, F, G, H, I, J which correspond with the CSV file column header 						     names.
\f2\fs24 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\li800\sl340\partightenfactor0

\f1\fs25\fsmilli12667 \cf2 \cb3 \strokec2 					  b. Include all DDL in submitted repository
\f2\fs24 \cf4 \cb1 \strokec4 \

\f1\fs25\fsmilli12667 \cf2 \cb3 \strokec2     					  c. Create your own SQLite DB\
					  d. The data sets can be extremely large so be sure the processing is optimized with efficiency in mind. \'a0\
					  e. Records that do not match the column count must be written to the bad-data-<timestamp>.csv file
\f2\fs24 \cf4 \cb1 \strokec4 \

\f1\fs25\fsmilli12667 \cf2 \cb3 \strokec2 					  f. Elements with commas will be double quoted\
					  g. At the end of the process write statistics to a log file
\f2\fs24 \cf4 \cb1 \strokec4 \

\f1\fs25\fsmilli12667 \cf2 \cb3 \strokec2                                                             a. # of records received
\f2\fs24 \cf4 \cb1 \strokec4 \

\f1\fs25\fsmilli12667 \cf2 \cb3 \strokec2                                                             b. # of records successful
\f2\fs24 \cf4 \cb1 \strokec4 \

\f1\fs25\fsmilli12667 \cf2 \cb3 \strokec2                                                             c. # of records failed\
\

\fs25\fsmilli12667 Instructions on running the code: 
\fs25\fsmilli12667 \
\
					a. The code can simply be run by running the main class in the code base,\
					b. Any IDE that supports java can be utilized. (Recommendations: Intellij IDEA CE, Eclipse),\
					c. A SQLite database browser is required. ({\field{\*\fldinst{HYPERLINK "https://sqlitebrowser.org/dl/"}}{\fldrslt 
\f2\fs24 \cf5 \cb1 \ul \ulc5 \strokec5 https://sqlitebrowser.org/dl/}}
\f2\fs24 \cf5 \cb1 \ul \ulc5 \strokec5 ).\
\

\fs25\fsmilli12660 \cf4 \ulnone Approach taken to solve this Project:\

\fs24 \

\fs25\fsmilli12660 - First thing first DB browser for SQLite was downloaded and a new database was formed which had columns from A-J.\
- Once this is done we create our first class in the project <MS3data.java> this would serve as a data model for our project. Meaning we set up our constructors along with getters     and setters here.\
- After the completion of this we create our Main class <Main.java>. This main class contains three different methods: <Main> method, <getFomCsv> method and finally \
<createNewFile> method. \
- In the <getFromCsv> method  we basically do the main job for the project which is to read the csv file line per line and then insert values separated by comma in different columns of our Database. \
- In addition to that this method also keeps track of number of records that failed, number of records that were successful and total number of records that were received. \
- The method <createNewFile> creates the new CSV file that will be utilized to feed faulty records.\
- Now finally coming to the <Main> method, this is where we set up our SQLite connection ,our queries to insert our parsed data into database and most importantly call the method <getFromCsv> to perform the main job.\
\
\
PS: My code is heavily commented so anything not answered here or any confusion understanding the codebase should be easily eradicated by reading the comments in code base itself. \cf5 \ul \ulc5 \

\fs24 				           \
					
\f1\fs25\fsmilli12667 \cf2 \cb3 \ulnone \strokec2 \
\pard\tx0\pardeftab720\li800\sl340\partightenfactor0
\cf2 \
\pard\pardeftab720\li800\sl340\partightenfactor0
\cf2 \
\pard\pardeftab720\li90\fi709\sl340\partightenfactor0
\cf2 \
\pard\tx0\pardeftab720\li800\sl340\partightenfactor0
\cf2 \
\pard\pardeftab720\li800\sl340\partightenfactor0

\f2\fs24 \cf4 \cb1 \strokec4 \

\f1\fs25\fsmilli12667 \cf2 \cb3 \strokec2 \

\f2\fs24 \cf4 \cb1 \strokec4 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
}